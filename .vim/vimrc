"""""""""""""""""""""""
"         BASE        "
"""""""""""""""""""""""
syntax on
filetype plugin indent on
set nocompatible
set wrap
set breakindent
set breakindentopt=sbr
set linebreak
set showbreak=↪
set display+=lastline
set tabstop=4 expandtab shiftwidth=4 smarttab
set list lcs=tab:\│\ 
set number
set mouse= " Don't allow mouse
set ruler " Display cursor
set cursorline " cursorcolumn
set hlsearch " Highlighted search results
set showcmd " Display (partially) the command in the last line of the screen
set cmdheight=1
set backspace=indent,eol,start " Backspacing over every character in insert mode
set autoindent
set ignorecase
set noshowmode " no status bar
set scrolloff=8
set splitbelow splitright
set timeoutlen=1000 ttimeoutlen=0 " remove escape delay
" set colorcolumn=80
autocmd BufEnter * :syntax sync fromstart

function! ColorLine(mode)
	if a:mode == 'i'
		hi User5 ctermfg=7 ctermbg=27
	elseif a:mode == 'r'
		hi User5 ctermfg=7 ctermbg=124
	else
		hi User5 ctermfg=7 ctermbg=20
	endif
endfunction

au InsertEnter * call ColorLine(v:insertmode)
au InsertLeave * hi User5 guibg=Black ctermfg=6 guifg=White ctermbg=0

hi User5 guibg=Black ctermfg=14 guifg=White ctermbg=0
hi User2 guibg=Black ctermfg=0 guifg=White ctermbg=79
hi User3 guibg=Black ctermfg=7 guifg=White ctermbg=27

hi StatusLine guibg=Black ctermfg=6 guifg=White ctermbg=0
hi StatusLineNC guibg=Black ctermfg=235 guifg=White ctermbg=0

" Formats the statusline
set statusline=\%2*
set statusline+=\ %f                           " file name
set statusline+=\ [%{strlen(&fenc)?&fenc:'none'}, "file encoding
set statusline+=%{&ff}] "file format
set statusline+=\ %y      "filetype
set statusline+=\ %m      "modified flag
set statusline+=\ %r      "read only flag
set statusline+=\%4*

set statusline+=%=
set statusline+=\%5*
set statusline+=\ [%{mode()}]
set statusline+=\ %3*
set statusline+=\ line\ %l\ of\ %L
set statusline+=\ %4* 
set laststatus=2



set fillchars=vert:\|



call plug#begin('~/.vim/plugged')

Plug 'francoiscabrol/ranger.vim'
Plug 'dylanaraps/fff.vim'
Plug 'scrooloose/nerdtree'
Plug 'sheerun/vim-polyglot'
Plug 'junegunn/fzf.vim'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-rooter'
Plug 'Yggdroot/indentLine'
Plug 'machakann/vim-highlightedyank'
Plug 'rbong/vim-flog'
Plug 'pseewald/vim-anyfold'
Plug 'RRethy/vim-illuminate'
Plug 'josephobriot/vim-cursorlight'

call plug#end()



let g:indentLine_char = '¦'
" Open fff
nnoremap , :F<CR>
" Open fzf
noremap . :FZF<CR>
" let g:fzf_layout = { 'down': '~20%' }
" Vertical split (NERDtree style).
let g:fff#split = "30vnew"

" ; to enter commands, so I don't need shift
nmap ; :
vmap ; :

nnoremap k gk
nnoremap j gj

" Alt arrow to navigate
nmap <silent> <A-Up> :wincmd k<CR>
nmap <silent> <A-Down> :wincmd j<CR>
nmap <silent> <A-Left> :wincmd h<CR>
nmap <silent> <A-Right> :wincmd l<CR>

" Alt shift arrow to resize
nmap <A-S-Right> :vertical resize +10<CR>
nmap <A-S-Left> :vertical resize -10<CR>
nmap <A-S-Up> :resize +10<CR>
nmap <A-S-Down> :resize -10<CR>


" line up or down
nnoremap <C-j> mz:m +1<CR>`z==
nnoremap <C-k> mz:m -2<CR>`z==
inoremap <C-j> <Esc>:m +1<CR>==gi
inoremap <C-k> <Esc>:m -2<CR>==gi
vnoremap <C-j> :m'>+<CR>gv=`<my`>mzgv`yo`z
vnoremap <C-k> :m'<-2<CR>gv=`>my`<mzgv`yo`z


autocmd Filetype * AnyFoldActivate
set foldlevel=99


" Jump to the last position when reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g'\"" | endif
endif

autocmd ColorScheme * highlight Normal ctermbg=0
autocmd ColorScheme * highlight VertSplit ctermfg=7 ctermbg=0
autocmd ColorScheme * highlight WildMenu ctermfg=7 ctermbg=0
autocmd ColorScheme * highlight LineNr ctermbg=0
autocmd ColorScheme * highlight Folded ctermbg=249 ctermfg=236

autocmd ColorScheme * highlight User5 guibg=Black ctermfg=14 guifg=White ctermbg=0
autocmd ColorScheme * highlight User2 guibg=Black ctermfg=0 guifg=White ctermbg=79
autocmd ColorScheme * highlight User3 guibg=Black ctermfg=7 guifg=White ctermbg=27

let g:CursorLightenFactor = 40

augroup BgHighlight
	autocmd!
	" autocmd WinEnter * set colorcolumn=80
	" autocmd WinLeave * set colorcolumn=0
	autocmd WinEnter * set cul
	autocmd WinLeave * set nocul
augroup END

set background=dark
colorscheme palenight
" colorscheme mysticaltutor



" Resize panes whenever containing window resized.
autocmd VimResized * wincmd =

" Better backup, swap and undos storage
set backup                        " make backup files
set undofile                      " persistent undos - undo after you re-open the file
set directory=~/.vim/dirs/tmp     " directory to place swap files in
set backupdir=~/.vim/dirs/backups " where to put backup files
set undodir=~/.vim/dirs/undodir   " undo directory


" Don't you f'in touch my cursor
set guicursor=

" Save as sudo
ca w!! w !sudo tee "%"
